{"version":3,"sources":["client.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","exportedObject","getAll","axios","get","then","response","data","create","personPhone","post","deleteRegister","id","delete","res","updateRegiser","person","put","Filter","search","handleChangeSearch","value","onChange","PersonForm","newName","number","handleChangeName","handleChangeNumber","handleSubmit","onSubmit","type","Persons","personsFiltered","handleDelete","personsList","map","name","onClick","Notification","msg","styleClass","borderColor","border","backgroundColor","padding","margin","style","App","useState","persons","setPersons","setNewName","setNumber","setSearch","message","setmessage","findPerson","find","useEffect","ClientApi","filter","toLocaleLowerCase","match","sarch","e","target","preventDefault","prevPerson","window","confirm","setTimeout","catch","err","console","log","indexDelete","findIndex","slice","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1c429c2.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/persons'\n\nconst getAll = () =>{\n    const request = axios.get(baseUrl)\n    return request.then( response => response.data )\n}\n\nconst create = (personPhone)=>{\n    const request = axios.post(baseUrl,personPhone)\n    return request.then( (response) => response.data) \n}\n\nconst deleteRegister = (id) =>{\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then( res => res.data )\n}\n\nconst updateRegiser = (person) => {\n    const request = axios.put(`${baseUrl}/${person.id}`, person)\n    return request.then( res => res.data )\n}\n\nconst exportedObject = {\n    getAll,\n    create,\n    deleteRegister,\n    updateRegiser\n}\n\nexport default exportedObject","import React, { useEffect, useState } from 'react'\nimport ClientApi from './client'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ number, setNumber ] = useState('')\n  const [ search, setSearch ] = useState('')\n  const [message, setmessage] = useState({msg: '', type:''})\n\n  const handleChangeName = (e) =>{\n    setNewName(e.target.value)\n  }\n  const handleChangeNumber = (e) =>{\n    setNumber(e.target.value)\n  }\n  const handleChangeSearch = (e) =>{\n    setSearch(e.target.value)\n  }\n\n  const handleSubmit = (e) =>{\n    e.preventDefault()\n\n    let prevPerson = findPerson(newName)\n    if( prevPerson ){\n      //alert(`A person with the name ${newName} already exists`)\n      if( ! window.confirm( `Are you sure to update ${newName}'s number?`) )\n      return false\n      else{\n        prevPerson.number = number\n        ClientApi.updateRegiser(prevPerson)\n        .then( () => {\n          setPersons(persons.map( person => person.id !== prevPerson.id?person: {...prevPerson }))\n          setmessage({msg:'Person Updated succesfully', type:'SUCCESS'})\n          setTimeout( () => {\n            setmessage({msg:'', type:''})\n          }, 3000)\n        })\n        .catch( err => console.log( err ))\n      }\n    }else{\n      ClientApi.create({name:newName, number:number})\n      .then( (data) => {\n        setPersons([...persons, data])\n        setmessage({msg:'Person created succesfully', type:'SUCCESS'})\n        setTimeout( () => {\n          setmessage({msg:'', type:''})\n        }, 3000)\n      })\n      .catch( err => console.log( 'Err Here' ,err ))\n    }\n\n    setNewName('')\n    setNumber('')\n  }\n\n  const handleDelete = (id)=>{\n    if(window.confirm('Are you sure to delete the person?')){\n      ClientApi.deleteRegister(id)\n      .then( () => {\n        let indexDelete = persons.findIndex( person => person.id === id )\n        setPersons([...persons.slice(0,indexDelete), ...persons.slice(indexDelete + 1, persons.length  )])\n      })\n      .catch( err => {\n        setmessage({msg:`The person of id '${id}' does not exist on the server anymore`, type:'ERROR'})\n        setTimeout( () => {\n          setmessage({msg:'', type:''})\n        }, 3000)\n      })\n    }\n    \n  }\n\n  const findPerson = (name) => persons.find( person => person.name === name )\n\n  useEffect( () => {\n     ClientApi.getAll()\n     .then( data => setPersons(data) )\n  }, [])\n\n  const personsFiltered = search\n  ?persons.filter( person => person.name.toLocaleLowerCase().match(search.toLocaleLowerCase()) || person.number.toLocaleLowerCase().match(search.toLocaleLowerCase()) )\n  :persons\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification msg={message.msg} type={message.type} />\n      <Filter sarch={search} handleChangeSearch={handleChangeSearch} />\n    \n      <PersonForm newName={newName} number={number} handleChangeName={handleChangeName} \n                  handleSubmit={handleSubmit} handleChangeNumber={handleChangeNumber}\n      />\n\n      <Persons personsFiltered={personsFiltered} handleDelete={handleDelete}/>\n      \n    </div>\n  )\n}\n\nconst Filter = ({search, handleChangeSearch})=> <>Search: <input value={search} onChange={handleChangeSearch} /> <br /></>\n\nconst PersonForm = ({ newName, number, handleChangeName, handleChangeNumber, handleSubmit}) =>{\n  return (\n    <>\n      <h2>Add a new</h2>\n      <form onSubmit={handleSubmit} >\n        <div>\n          name: <input value={newName} onChange={handleChangeName} />\n        </div>\n        <div>\n          number: <input value={number} onChange={handleChangeNumber} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </>\n  )\n}\n  \nconst Persons = ({personsFiltered, handleDelete})=> {\n  const personsList = personsFiltered.map( (person)  => \n  (\n    <div key={person.id}>\n      <span >\n        {person.name} : {person.number} \n      </span>\n      <button onClick={() => handleDelete(person.id) }>DELETE</button>\n    </div>\n  ))\n  return(\n    <> \n      <h2>Numbers</h2>\n      {personsList}\n    </>\n  )\n}\n\nconst Notification = ({msg, type}) => {\n  if(!msg) \n    return null\n  \n  let styleClass = {\n    borderColor: type ==='ERROR'?'red':'green',\n    border: '1px',\n    backgroundColor:type ==='ERROR'?'red':'green',\n    padding:15,\n    margin:10\n  }\n\n  return(\n    <div style={styleClass}>\n      <span>{msg}</span>\n    </div>\n  )\n}\n  \n    \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}